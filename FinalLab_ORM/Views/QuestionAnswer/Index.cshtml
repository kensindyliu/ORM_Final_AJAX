@model List<Entities.ViewModels.QuestionWithAnswersVM>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<center><h3 class="display-4">Questions and Answers</h3></center>

<script type="text/javascript">
    // JavaScript functions for interacting with the UI

    // Function to open the modal for adding a new question
    function AddQuestion() {
        clearModalFields();
        $('#addQuestionModal').modal('show');
        $('#btnAdd').show();
        $('#btnUpdate').hide();
    }

    // Function to save a new question
    function SaveQuestion() {
        // Extract question content and answer options from the modal
        var questionContent = $('#questionContent').val().trim();
        var answerOptions = [];

        // Iterate through each answer option input field
        $('.answer-option').each(function (index) {
            var answerText = $(this).find('.answer-input').val().trim();
            var isCorrect = $(this).find('.correct-answer-radio').is(':checked');
            answerOptions.push({ AnswerOption: answerText, IsTheCorrectOption: isCorrect });
        });

        console.log("Question content: " + questionContent);
        console.log("Answer options: ", answerOptions);

        // Construct the question data object
        var questionData = {
            QuestionContent: questionContent,
            Answers: answerOptions
        };

        console.log("questionData: ", questionData);

        // Send AJAX request to add the question
        $.ajax({
            url: '/QuestionAnswer/AddQuestionWithAnswers',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(questionData),
            success: function (response) {
                if (response === 'success') {
                    // alert('Question added successfully');
                    $('#addQuestionModal').modal('hide');
                    location.reload(); // Refresh the page to display the new question
                } else {
                    alert('Failed to add the question. Please try again later.');
                }
            },
            error: function (errormessage) {
                alert('Error: ' + errormessage.responseText);
            }
        });
    }

    // Function to open the modal for editing a question
    function EditQuestion(questionId) {
        // console.log("Editing question " + questionId);
        // Send AJAX request to fetch question data by its ID
        $.ajax({
            url: '/QuestionAnswer/GetQuestionWithAnswersById?questionId=' + questionId,
            type: 'GET',
            success: function (questionWithAnswers) {
                // console.log("Received question data:", questionWithAnswers);

                // Populate the modal fields with the retrieved question data
                $('#questionId').val(questionWithAnswers.questionID);
                $('#questionContent').val(questionWithAnswers.questionContent);

                // console.log(questionWithAnswers.Answers);

                // Clear previous answer options
                $('#answerOptionsGroup').empty();

                // Add each answer option to the modal
                questionWithAnswers.answers.forEach(function (answer) {
                    var answerOptionHtml = `
                            <div class="answer-option d-flex align-items-center mb-3">
                                <input type="text" class="form-control answer-input me-3" value="${answer.answerOption}" required>
                                <input type="radio" class="form-check-input correct-answer-radio me-3" name="correctAnswer" ${answer.isTheCorrectOption ? 'checked' : ''} required>
                                <button type="button" class="btn btn-danger remove-answer-btn">Remove</button>
                            </div>
                        `;
                    $('#answerOptionsGroup').append(answerOptionHtml);
                });

                // Show the modal
                $('#addQuestionModal').modal('show');
                $('#btnAdd').hide();
                $('#btnUpdate').show();
            },
            error: function (errormessage) {
                alert('Error: ' + errormessage.responseText);
            }
        });
    }

    function UpdateQuestion() {
        // Extract question ID, content, and answer options from the modal
        var questionId = $('#questionId').val();
        var questionContent = $('#questionContent').val().trim();
        var answerOptions = [];

        // Loop through each answer option in the modal
        $('.answer-option').each(function (index) {
            var answerText = $(this).find('.answer-input').val().trim(); // Get the answer text from the input field
            var isCorrect = $(this).find('.correct-answer-radio').is(':checked'); // Check if the radio button is checked

            answerOptions.push({ AnswerOption: answerText, IsTheCorrectOption: isCorrect }); // Add the answer to the answer options array
        });

        // Construct the question data object
        var questionData = {
            QuestionID: questionId,
            QuestionContent: questionContent,
            Answers: answerOptions
        };


        // console.log(questionData);

        // Send AJAX request to update the question
        $.ajax({
            url: '/QuestionAnswer/UpdateQuestionWithAnswers',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(questionData),
            success: function (response) {
                if (response === 'success') {
                    // alert('Question updated successfully');
                    $('#addQuestionModal').modal('hide');
                    location.reload(); // Refresh the page to reflect changes
                } else {
                    alert('Failed to update the question. Please try again later.');
                }
            },
            error: function (errormessage) {
                alert('Error: ' + errormessage.responseText);
            }
        });
    }

    // Function to delete a question
    function DeleteQuestion(questionId) {
        // var ans = confirm('Are you sure you want to delete this question?');
        // if (ans) {
            // Send AJAX request to delete the question
            $.ajax({
                url: '/QuestionAnswer/DeleteQuestionWithAnswers?questionId=' + questionId,
                type: 'DELETE',
                success: function (response) {
                    if (response === 'success') {
                        // alert('Question has been deleted successfully');
                        location.reload(); // Refresh the page to reflect changes
                    } else {
                        // alert('Failed to delete the question. Please try again later.');
                    }
                },
                error: function (errormessage) {
                    alert('Error: ' + errormessage.responseText);
                }
            });
        // }
    }

    // Function to clear the modal fields
    function clearModalFields() {
        $('#questionId').val('');
        $('#questionContent').val('');
        $('#answerOptionsGroup .answer-input').val('');
        $('#answerOptionsGroup').find('.correct-answer-radio').prop('checked', false);
        // $('#answerOptionsGroup').children('.answer-option:not(:first-child)').remove();
        $('#answerOptionsGroup').find('.answer-option').not(':first').remove();
        $('#questionContent').removeClass('is-invalid');
        $('#answerOptionsGroup').removeClass('is-invalid');
    }

    // Function to add a new answer option input field
    function addAnswerOption() {
        var answerOptionsCount = $('.answer-option').length;
        if (answerOptionsCount >= 6) {
            alert('You can only add a maximum of 6 answer options.');
            return;
        }

        var answerOptionHtml = `
                <div class="answer-option d-flex align-items-center mb-3">
                    <input type="text" class="form-control answer-input me-3" required>
                        <input type="radio" class="form-check-input correct-answer-radio me-3" name="correctAnswer" value="0" required>
                    <button type="button" class="btn btn-danger remove-answer-btn">Remove</button>
                </div>
            `;
        $('#answerOptionsGroup').append(answerOptionHtml);
    }

    function validateForm() {
        var questionContent = $('#questionContent').val().trim();
        var answerOptions = $('.answer-input').map(function () {
            return $(this).val().trim();
        }).get();
        var correctAnswerChecked = $('.correct-answer-radio:checked').length > 0;

        var isValid = true;

        // Validate question content
        if (!questionContent.trim()) {
            $('#questionContent').addClass('is-invalid');
            isValid = false;
        } else {
            $('#questionContent').removeClass('is-invalid');
        }

        // Validate answer options
        if (answerOptions.length < 2 || !correctAnswerChecked || answerOptions.some(option => option === '')) {
            $('#answerOptionsGroup').addClass('is-invalid');
            $('#answerOptionsGroup .invalid-feedback').show();
            isValid = false;
        } else {
            $('#answerOptionsGroup').removeClass('is-invalid');
            $('#answerOptionsGroup .invalid-feedback').hide();
        }

        return isValid;
    }

    function validateAndSave() {
        if (validateForm()) {
            SaveQuestion();
        } else {
            // If the form is invalid, trigger validation messages
            document.getElementById('questionForm').reportValidity();
        }
    }

    function validateAndUpdate() {
        if (validateForm()) {
            UpdateQuestion();
        } else {
            // If the form is invalid, trigger validation messages
            document.getElementById('questionForm').reportValidity();
        }
    }

    function showDeleteConfirmationModal(itemId) {
        // Set the ID of the item to be deleted
        $('#itemIdToDelete').val(itemId);

        // Show the modal
        $('#deleteConfirmationModal').modal('show');
    }

    function confirmDelete() {
        // Get the ID of the item to be deleted
        var itemId = $('#itemIdToDelete').val();

        // Perform the deletion process (AJAX request, etc.)
        // Replace this with your actual deletion logic
        console.log('Deleting item with ID:', itemId);
        DeleteQuestion(itemId);

        // Close the modal
        $('#deleteConfirmationModal').modal('hide');
    }


    // Event listener for the Add Answer button
    $(document).on('click', '.add-answer-btn', addAnswerOption);

    // Event listener for the Remove Answer button
    $(document).on('click', '.remove-answer-btn', function () {
        $(this).closest('.answer-option').remove();
    });
</script>

<!-- Button to open add question modal -->
<button type="button" class="btn btn-success mb-3" onclick="AddQuestion()">Add New Question</button>

<table class="table table-bordered table-striped table-responsive table-hover">
    <thead class="bg-primary text-white">
        <tr>
            <th>Questions</th>
            <th>Answers</th>
            <th>Correct Answer</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var question in Model)
        {
            <tr>
                <td>@question.QuestionContent</td>
                <td>
                    <ul>
                        @foreach (var answerOption in question.Answers)
                        {
                            <li>@answerOption.AnswerOption</li>
                        }
                    </ul>
                </td>
                <td>
                    @if (question.Answers != null)
                    {
                        @foreach (var answer in question.Answers)
                        {
                            if (answer.IsTheCorrectOption)
                            {
                                <span>@answer.AnswerOption</span>
                            }
                        }
                    }
                </td>
                <td>
                    <a href="#" class="btn btn-primary mt-1 me-1" onclick="EditQuestion(@question.QuestionID)">Edit</a>
                    <a href="#" class="btn btn-danger mt-1 me-1" onclick="showDeleteConfirmationModal(@question.QuestionID)">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Add/Edit Question Modal -->
<div class="modal fade" id="addQuestionModal" tabindex="-1" role="dialog" aria-labelledby="addQuestionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addQuestionModalLabel">Add Question</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="questionForm" onsubmit="return validateForm()">
                    <input type="hidden" id="questionId">
                    <div class="form-group mb-3">
                        <label for="questionContent" class="mb-1">Question Content</label>
                        <input type="text" class="form-control" id="questionContent" required>
                        <div class="invalid-feedback">Please enter question content.</div>
                    </div>
                    <div class="d-flex justify-content-between mb-1">
                        <label>Answer Options</label>
                        <label>Correct Answer</label>
                    </div>
                    <div class="form-group mb-3" id="answerOptionsGroup">
                        <div class="answer-option d-flex align-items-center mb-3">
                            <input type="text" class="form-control answer-input me-3" required>
                            <input type="radio" class="form-check-input correct-answer-radio me-3" name="correctAnswer" value="0" required>
                            <button type="button" class="btn btn-danger remove-answer-btn">Remove</button>
                        </div>
                    </div>
                    <div class="invalid-feedback mb-2">Please add at least two answer options and select the correct answer.</div>
                    <button type="button" class="btn btn-success add-answer-btn">Add Answer</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnAdd" onclick="validateAndSave()">Save Question</button>
                <button type="button" class="btn btn-primary" id="btnUpdate" onclick="validateAndUpdate()">Update Question</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #007bff; color: #fff;">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirmation</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this question?</p>

                <!-- Hidden input to store the ID of the question to be deleted -->
                <input type="hidden" id="itemIdToDelete" />
            </div>
            <div class="modal-footer" style="background-color: #f0f8ff;">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete</button>
            </div>
        </div>
    </div>
</div>

